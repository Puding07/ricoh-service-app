//import liraries
import React from "react";
import "./Icon.scss";
import { useHistory } from "react-router-dom";

const Home = (props) => {
  const { style, active } = props;
  return (
    <svg
      width="73"
      height="67"
      viewBox="0 0 73 67"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter0_d)" style={style}>
        <path
          d="M24.3506 57C18.0417 57 18.0417 57 18.0417 51.4399V30.6795C18.0417 34.5272 7.03902 33.1953 12.5404 27.0433C18.0417 20.8913 27.0508 14.2319 30.3062 11.8641C33.5616 9.49628 37.8738 9.26373 42.6938 11.8641C47.5138 14.4644 54.9583 20.4684 60.4596 27.0433C65.961 33.6181 54.9583 34.3158 54.9583 30.6795V51.4399C54.9583 57 54.9583 57 47.5138 57C42.4651 57 42.6938 57 42.6938 44.9074C42.6938 38.2691 30.3062 38.6074 30.3062 44.9074C30.3062 57 30.3062 57 24.3506 57Z"
          stroke="white"
          strokeWidth="4"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
      </g>
      <defs>
        <filter
          id="filter0_d"
          x="0.997314"
          y="0.000183105"
          width="71.0051"
          height="67"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="4" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.192157 0 0 0 0 0.819608 0 0 0 0 0.87451 0 0 0 0.85 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  );
};

const Printers = (props) => {
  const { active } = props;
  return (
    <svg
      width="79"
      height="60"
      viewBox="0 0 79 60"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter1_d)">
        <path
          d="M14.7273 30.5011C10 30.5011 10 29.9544 10 39.9772C10 50 10 50 14.7273 50C19 50 56.5449 50 63.2727 50C68.6364 50 69 50 69 39.9772C69 29.9544 68.6364 30.5011 63.2727 30.5011M14.7273 30.5011C19.9123 30.5011 19.4545 30.5011 19.4545 25.1253C19.4545 19.385 19.4545 19.385 24.6364 19.385C27.6364 19.385 26.7588 17.9465 26.8409 16.1959M14.7273 30.5011H26.8409M63.2727 30.5011C58.5455 30.5011 58.5455 30.5011 58.5455 25.1253C58.5455 19.385 58.5455 19.385 53.3636 19.385C50.2727 19.385 51.0359 17.9708 50.8853 16.1959M63.2727 30.5011H50.8853M47.1818 10L29.0909 10C26.3803 10 26.9685 13.475 26.8409 16.1959M47.1818 10C50.8182 14.2825 47.1818 10 50.8182 14.2825M47.1818 10C47.1818 10 46.5455 14.2825 48 14.2825C49.4546 14.2825 50.8182 14.2825 50.8182 14.2825M50.8182 14.2825C50.8241 14.9344 50.8336 15.5864 50.8853 16.1959M26.8409 16.1959V30.5011M26.8409 30.5011H50.8853M50.8853 16.1959V30.5011"
          stroke="white"
          strokeWidth="4"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
      </g>
      <defs>
        <filter
          id="filter1_d"
          x="0"
          y="0"
          width="79"
          height="60.0001"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="4" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.192157 0 0 0 0 0.819608 0 0 0 0 0.87451 0 0 0 0.85 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  );
};

const Stock = (props) => {
  const { active } = props;
  return (
    <svg
      width="78"
      height="90"
      viewBox="0 0 78 90"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter2_d)">
        <line
          x1="9.9122"
          y1="15.7196"
          x2="32.5902"
          y2="64.3527"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
        <line
          x1="44.6285"
          y1="67.7112"
          x2="69.1485"
          y2="56.2774"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
        <path
          d="M41.789 69.1723C42.9287 71.6164 41.5158 75.2353 37.7594 76.987C34.003 78.7386 30.3227 77.4947 29.1829 75.0506C28.0432 72.6064 29.456 68.9875 33.2124 67.2359C36.9688 65.4842 40.6492 66.7281 41.789 69.1723Z"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
        <path
          d="M37.9577 70.9588C38.2945 71.6812 37.9461 73.1044 36.3057 73.8694C34.6652 74.6344 33.351 73.9864 33.0141 73.264C32.6772 72.5415 33.0256 71.1183 34.6661 70.3533C36.3066 69.5884 37.6208 70.2363 37.9577 70.9588Z"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
        <path
          d="M51.3973 31.7623L55.9208 41.4628L32.5956 52.3613L28.0638 42.6429C27.9471 42.3927 28.0554 42.0952 28.3057 41.9785L50.7329 31.5205C50.9831 31.4038 51.2806 31.5121 51.3973 31.7623ZM33.8635 55.0803L57.1886 44.1817L61.7111 53.8802C61.8278 54.1304 61.7195 54.4279 61.4692 54.5446L43.3318 63.0022C43.1371 63.093 42.8259 63.0577 42.6022 62.7886C40.7034 60.5037 38.6257 58.9764 36.3415 58.6616C36.0341 58.6193 35.7731 58.5326 35.5859 58.4253C35.4062 58.3222 35.3285 58.222 35.2919 58.1435L33.8635 55.0803Z"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
      </g>
      <defs>
        <filter
          id="filter2_d"
          x="-6.34351"
          y="-7.72522"
          width="86.4517"
          height="97.6447"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="4" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.192157 0 0 0 0 0.819608 0 0 0 0 0.87451 0 0 0 0.85 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  );
};

const Parts = (props) => {
  const { active } = props;
  return (
    <svg
      width="71"
      height="70"
      viewBox="0 0 71 70"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter4_d)">
        <path
          d="M39.4034 63.3058V64.8058C39.6015 64.8058 39.7976 64.7665 39.9805 64.6903L39.4034 63.3058ZM58.7241 19.1444L60.1471 18.6702C60.105 18.5436 60.0461 18.4233 59.9721 18.3123L58.7241 19.1444ZM58.7241 44.2612L57.2532 43.9671L58.7241 44.2612ZM14.5627 51.4374L13.3394 52.3055L14.5627 51.4374ZM23.8089 15.9699L22.7483 14.9093L22.7482 14.9093L23.8089 15.9699ZM36.3674 7.82803L35.5956 9.11427C35.6327 9.13654 35.6708 9.1572 35.7097 9.17618L36.3674 7.82803ZM31.3992 8.38004L32.4598 9.44073L32.4599 9.4407L31.3992 8.38004ZM57.068 17.9257L56.4104 19.2738C56.4615 19.2988 56.514 19.3208 56.5676 19.3397L57.068 17.9257ZM16.2184 23.5605L17.1185 24.7604C17.1753 24.7178 17.2289 24.6713 17.279 24.6212L16.2184 23.5605ZM14.0106 29.6327L12.5106 29.6327V29.6327H14.0106ZM57.068 46.4689L56.129 45.2991C56.0865 45.3333 56.0459 45.3697 56.0073 45.4082L57.068 46.4689ZM14.0106 48.4013L15.5074 48.4983C15.5095 48.466 15.5106 48.4336 15.5106 48.4013H14.0106ZM16.2184 52.5409L16.8892 51.1993C16.8076 51.1585 16.7226 51.1253 16.635 51.0999L16.2184 52.5409ZM41.8875 61.6494L40.8269 60.5887C40.7997 60.6159 40.7736 60.6441 40.7486 60.6732L41.8875 61.6494ZM36.3674 62.6155L37.0384 61.274L37.0382 61.2739L36.3674 62.6155ZM41.8875 35.9805L40.8269 34.9199L40.8267 34.9201L41.8875 35.9805ZM36.3674 36.9467L37.0383 35.6052L37.0382 35.6051L36.3674 36.9467ZM37.9035 37.637C37.9035 42.6491 37.9034 46.5602 37.9034 50.4714C37.9034 54.3825 37.9034 58.2936 37.9034 63.3058H40.9034C40.9034 58.2936 40.9034 54.3825 40.9034 50.4714C40.9034 46.5602 40.9034 42.6491 40.9034 37.637H37.9035ZM49.2017 28.6664C50.2623 29.7271 50.2623 29.7271 50.2624 29.727C50.2624 29.727 50.2625 29.7269 50.2626 29.7268C50.2627 29.7266 50.263 29.7264 50.2634 29.726C50.264 29.7253 50.2651 29.7243 50.2665 29.7229C50.2692 29.7202 50.2733 29.7161 50.2788 29.7106C50.2897 29.6997 50.3059 29.6835 50.3272 29.6622C50.3699 29.6195 50.4329 29.5565 50.5145 29.4749C50.6778 29.3117 50.9152 29.0742 51.2121 28.7774C51.8059 28.1836 52.6374 27.3521 53.5886 26.401C55.4909 24.4988 57.8715 22.1183 59.7847 20.205L57.6634 18.0837C55.7502 19.9969 53.3696 22.3774 51.4673 24.2796C50.5162 25.2307 49.6846 26.0622 49.0908 26.656C48.7939 26.9529 48.5565 27.1903 48.3933 27.3535C48.3117 27.4351 48.2486 27.4981 48.206 27.5408C48.1846 27.5621 48.1684 27.5783 48.1575 27.5892C48.1521 27.5947 48.148 27.5988 48.1452 27.6015C48.1438 27.6029 48.1428 27.604 48.1421 27.6047C48.1418 27.605 48.1415 27.6053 48.1413 27.6054C48.1412 27.6055 48.1412 27.6056 48.1411 27.6056C48.1411 27.6057 48.1411 27.6057 49.2017 28.6664ZM49.8725 27.3247L24.4797 14.6283L23.1381 17.3116L48.5309 30.008L49.8725 27.3247ZM33.8833 8.5C34.1222 8.5 34.5139 8.60649 34.9485 8.79273C35.144 8.87654 35.3133 8.96117 35.4326 9.02433C35.4917 9.05561 35.537 9.08083 35.5655 9.09698C35.5797 9.10503 35.5896 9.11076 35.5947 9.11379C35.5973 9.1153 35.5987 9.11613 35.5989 9.11622C35.599 9.11627 35.5987 9.11614 35.5982 9.11581C35.5979 9.11565 35.5976 9.11544 35.5971 9.11519C35.5969 9.11506 35.5967 9.11492 35.5964 9.11476C35.5963 9.11469 35.5961 9.11456 35.596 9.11452C35.5958 9.1144 35.5956 9.11427 36.3674 7.82803C37.1391 6.54178 37.1389 6.54165 37.1386 6.54151C37.1385 6.54146 37.1383 6.54131 37.1381 6.54121C37.1378 6.54101 37.1374 6.54079 37.1371 6.54056C37.1363 6.54011 37.1354 6.5396 37.1345 6.53904C37.1326 6.53792 37.1304 6.5366 37.1278 6.53508C37.1227 6.53204 37.1162 6.52822 37.1084 6.52367C37.0929 6.51456 37.072 6.5025 37.0463 6.48792C36.995 6.45878 36.9238 6.41931 36.8363 6.37296C36.6623 6.28087 36.4177 6.15849 36.1302 6.0353C35.5987 5.80753 34.7484 5.5 33.8833 5.5L33.8833 8.5ZM24.8695 17.0306L32.4598 9.44073L30.3386 7.31936L22.7483 14.9093L24.8695 17.0306ZM31.3992 8.38004C32.4599 9.4407 32.4597 9.44091 32.4595 9.4411C32.4594 9.44116 32.4592 9.44135 32.4591 9.44147C32.4589 9.44171 32.4586 9.44192 32.4584 9.44212C32.458 9.44251 32.4577 9.44282 32.4575 9.44305C32.457 9.44352 32.4569 9.44367 32.457 9.44352C32.4573 9.44322 32.4589 9.44171 32.4616 9.43907C32.467 9.43378 32.4771 9.42403 32.4914 9.41045C32.5203 9.38319 32.5657 9.3411 32.6245 9.28917C32.7439 9.1838 32.9101 9.04562 33.0991 8.91062C33.2919 8.77286 33.482 8.65758 33.6501 8.58118C33.8301 8.49937 33.9023 8.5 33.8833 8.5L33.8833 5.5C32.8189 5.5 31.858 6.11041 31.3554 6.46942C31.0614 6.67943 30.8135 6.88626 30.6396 7.03965C30.5519 7.1171 30.4808 7.18282 30.4298 7.23104C30.4043 7.2552 30.3837 7.27509 30.3683 7.29002C30.3607 7.29749 30.3543 7.30373 30.3493 7.30865C30.3469 7.31111 30.3447 7.31324 30.3429 7.31503C30.342 7.31593 30.3412 7.31674 30.3405 7.31747C30.3401 7.31783 30.3397 7.31817 30.3394 7.31849C30.3393 7.31865 30.339 7.31887 30.339 7.31895C30.3387 7.31917 30.3385 7.31938 31.3992 8.38004ZM59 21.3525C60.5 21.3525 60.5 21.3523 60.5 21.3521C60.5 21.3521 60.5 21.3519 60.5 21.3518C60.5 21.3516 60.5 21.3513 60.5 21.351C60.5 21.3505 60.5 21.3498 60.5 21.3491C60.5 21.3476 60.5 21.3458 60.5 21.3437C60.5 21.3394 60.4999 21.3338 60.4999 21.327C60.4998 21.3132 60.4996 21.2944 60.4993 21.271C60.4987 21.2242 60.4974 21.1587 60.495 21.0785C60.4902 20.9187 60.4805 20.6965 60.4611 20.4439C60.4249 19.9737 60.3463 19.2679 60.1471 18.6702L57.301 19.6186C57.3777 19.8489 57.4371 20.2472 57.4699 20.6739C57.485 20.8699 57.4926 21.0444 57.4964 21.1693C57.4983 21.2314 57.4992 21.2802 57.4996 21.3121C57.4998 21.328 57.4999 21.3397 57.5 21.3466C57.5 21.35 57.5 21.3523 57.5 21.3533C57.5 21.3538 57.5 21.3539 57.5 21.3538C57.5 21.3538 57.5 21.3536 57.5 21.3534C57.5 21.3533 57.5 21.3531 57.5 21.353C57.5 21.3529 57.5 21.3528 57.5 21.3527C57.5 21.3526 57.5 21.3525 59 21.3525ZM35.7097 9.17618L56.4104 19.2738L57.7256 16.5775L37.025 6.47987L35.7097 9.17618ZM57.068 17.9257C56.5676 19.3397 56.5673 19.3396 56.5669 19.3395C56.5668 19.3395 56.5665 19.3393 56.5662 19.3393C56.5658 19.3391 56.5654 19.3389 56.565 19.3388C56.5642 19.3385 56.5634 19.3382 56.5627 19.338C56.5613 19.3375 56.5602 19.3371 56.5593 19.3368C56.5575 19.3361 56.5567 19.3358 56.5567 19.3358C56.5569 19.3359 56.5605 19.3372 56.5674 19.3399C56.5812 19.3454 56.6073 19.3559 56.6427 19.3716C56.7147 19.4034 56.8186 19.4533 56.9334 19.5203C57.1874 19.6684 57.3807 19.8336 57.476 19.9764L59.9721 18.3123C59.5154 17.6272 58.8807 17.183 58.4446 16.9287C58.2145 16.7945 58.0078 16.695 57.8556 16.6277C57.7789 16.5938 57.7144 16.5674 57.6657 16.5482C57.6412 16.5386 57.6207 16.5308 57.6043 16.5247C57.5962 16.5216 57.5891 16.519 57.5831 16.5169C57.5801 16.5158 57.5773 16.5148 57.5749 16.5139C57.5737 16.5135 57.5725 16.5131 57.5714 16.5127C57.5709 16.5125 57.5704 16.5123 57.5699 16.5121C57.5696 16.512 57.5693 16.5119 57.5691 16.5118C57.5688 16.5117 57.5684 16.5116 57.068 17.9257ZM15.9857 26.5189C16.1905 25.9045 16.4976 25.4446 16.75 25.1417C16.8756 24.9909 16.9846 24.8827 17.0549 24.8178C17.0898 24.7855 17.1147 24.7645 17.1264 24.7548C17.1322 24.7499 17.1348 24.748 17.1336 24.7489C17.133 24.7494 17.1315 24.7505 17.129 24.7525C17.1278 24.7534 17.1263 24.7545 17.1245 24.7559C17.1237 24.7565 17.1227 24.7572 17.1217 24.758C17.1212 24.7584 17.1207 24.7588 17.1202 24.7592C17.1199 24.7594 17.1195 24.7597 17.1194 24.7598C17.119 24.7601 17.1185 24.7604 16.2184 23.5605C15.3182 22.3607 15.3178 22.361 15.3173 22.3613C15.3172 22.3614 15.3167 22.3617 15.3164 22.362C15.3158 22.3624 15.3152 22.3629 15.3146 22.3634C15.3133 22.3643 15.312 22.3653 15.3106 22.3664C15.3078 22.3685 15.3047 22.3709 15.3014 22.3734C15.2947 22.3786 15.2869 22.3846 15.2781 22.3916C15.2605 22.4054 15.2387 22.4229 15.2133 22.4439C15.1626 22.4859 15.0968 22.5425 15.0197 22.6137C14.8658 22.7558 14.6644 22.9581 14.4451 23.2214C14.0076 23.7465 13.4869 24.5286 13.1396 25.5703L15.9857 26.5189ZM17.279 24.6212L24.8696 17.0306L22.7482 14.9093L15.1577 22.4999L17.279 24.6212ZM13.1396 25.5703C12.8142 26.5466 12.6615 27.5663 12.5871 28.3104C12.5492 28.6892 12.5301 29.0119 12.5205 29.2425C12.5157 29.358 12.5132 29.4512 12.5119 29.5176C12.5113 29.5508 12.511 29.5773 12.5108 29.5967C12.5107 29.6063 12.5106 29.6142 12.5106 29.6203C12.5106 29.6233 12.5106 29.6258 12.5106 29.6279C12.5106 29.6289 12.5106 29.6298 12.5106 29.6306C12.5106 29.631 12.5106 29.6314 12.5106 29.6317C12.5106 29.6319 12.5106 29.6321 12.5106 29.6322C12.5106 29.6324 12.5106 29.6327 14.0106 29.6327C15.5106 29.6328 15.5106 29.633 15.5106 29.6332C15.5106 29.6332 15.5106 29.6334 15.5106 29.6335C15.5106 29.6337 15.5106 29.6339 15.5106 29.6341C15.5106 29.6344 15.5106 29.6346 15.5106 29.6347C15.5106 29.6349 15.5106 29.6347 15.5106 29.634C15.5106 29.6326 15.5106 29.6294 15.5106 29.6246C15.5107 29.6148 15.5109 29.5982 15.5114 29.5754C15.5123 29.5296 15.5141 29.4589 15.5179 29.3674C15.5256 29.184 15.541 28.9202 15.5722 28.609C15.6358 27.973 15.7591 27.1986 15.9857 26.5189L13.1396 25.5703ZM60.1949 44.5553C60.3525 43.7673 60.4267 42.9302 60.4629 42.3137C60.4814 42.0002 60.4906 41.7326 60.4952 41.542C60.4976 41.4465 60.4988 41.3698 60.4994 41.3158C60.4997 41.2888 60.4998 41.2674 60.4999 41.2521C60.5 41.2445 60.5 41.2384 60.5 41.2338C60.5 41.2316 60.5 41.2297 60.5 41.2283C60.5 41.2275 60.5 41.2269 60.5 41.2264C60.5 41.2261 60.5 41.2259 60.5 41.2256C60.5 41.2255 60.5 41.2254 60.5 41.2253C60.5 41.2252 60.5 41.2251 59 41.2251C57.5 41.2251 57.5 41.225 57.5 41.2249C57.5 41.2248 57.5 41.2247 57.5 41.2247C57.5 41.2246 57.5 41.2245 57.5 41.2244C57.5 41.2243 57.5 41.2242 57.5 41.2243C57.5 41.2245 57.5 41.225 57.5 41.2259C57.5 41.2277 57.5 41.2311 57.5 41.2359C57.4999 41.2456 57.4998 41.2611 57.4996 41.2821C57.4991 41.324 57.4981 41.3875 57.4961 41.4688C57.4922 41.6318 57.4842 41.8645 57.4681 42.1375C57.4354 42.6941 57.3716 43.375 57.2532 43.9671L60.1949 44.5553ZM60.5 41.2251V21.3525H57.5V41.2251H60.5ZM57.068 46.4689C58.007 47.6386 58.0072 47.6385 58.0074 47.6383C58.0075 47.6382 58.0077 47.638 58.0079 47.6379C58.0082 47.6376 58.0086 47.6374 58.009 47.6371C58.0097 47.6365 58.0105 47.6358 58.0115 47.635C58.0133 47.6336 58.0155 47.6318 58.0181 47.6297C58.0231 47.6256 58.0296 47.6203 58.0374 47.6139C58.053 47.6011 58.0738 47.5838 58.0992 47.5623C58.1498 47.5195 58.2192 47.4596 58.3017 47.3852C58.4653 47.2377 58.6877 47.0268 58.9209 46.7736C59.3262 46.3336 60.0025 45.5177 60.1949 44.5553L57.2532 43.9671C57.2539 43.9636 57.2493 43.9869 57.2259 44.0389C57.2028 44.09 57.1673 44.1556 57.1163 44.2347C57.0124 44.396 56.8716 44.5704 56.7142 44.7412C56.5596 44.9092 56.4072 45.054 56.293 45.157C56.2366 45.2078 56.1913 45.2468 56.162 45.2716C56.1474 45.2839 56.1369 45.2926 56.1312 45.2973C56.1283 45.2997 56.1267 45.301 56.1263 45.3014C56.1261 45.3015 56.1262 45.3014 56.1267 45.3011C56.1269 45.3009 56.1272 45.3006 56.1276 45.3003C56.1278 45.3001 56.128 45.3 56.1282 45.2998C56.1284 45.2997 56.1286 45.2995 56.1286 45.2995C56.1288 45.2993 56.129 45.2991 57.068 46.4689ZM12.5106 29.6327V48.4013H15.5106V29.6327H12.5106ZM14.0106 48.4013C12.5137 48.3044 12.5137 48.3046 12.5137 48.3049C12.5137 48.305 12.5137 48.3053 12.5136 48.3055C12.5136 48.3059 12.5136 48.3064 12.5136 48.3069C12.5135 48.3078 12.5134 48.3089 12.5133 48.3101C12.5132 48.3126 12.513 48.3155 12.5128 48.319C12.5124 48.3259 12.5119 48.3348 12.5113 48.3456C12.5102 48.3671 12.5088 48.3964 12.5073 48.4325C12.5045 48.5046 12.5015 48.6048 12.5004 48.7265C12.4983 48.968 12.5036 49.3038 12.5343 49.6792C12.5885 50.3408 12.7422 51.464 13.3394 52.3055L15.7859 50.5693C15.697 50.444 15.5747 50.0492 15.5243 49.4344C15.5028 49.1716 15.4987 48.9296 15.5003 48.753C15.5011 48.6656 15.5032 48.5965 15.505 48.5517C15.5059 48.5294 15.5067 48.5132 15.5071 48.504C15.5074 48.4994 15.5076 48.4966 15.5076 48.4956C15.5076 48.4951 15.5076 48.4951 15.5076 48.4955C15.5076 48.4957 15.5076 48.4961 15.5076 48.4965C15.5075 48.4967 15.5075 48.497 15.5075 48.4973C15.5075 48.4974 15.5075 48.4977 15.5075 48.4978C15.5075 48.498 15.5074 48.4983 14.0106 48.4013ZM13.3394 52.3055C13.8166 52.978 14.4701 53.389 14.9119 53.6169C15.1458 53.7377 15.3554 53.8248 15.5095 53.8828C15.5872 53.9121 15.6526 53.9346 15.7022 53.9509C15.727 53.959 15.748 53.9657 15.7647 53.9708C15.773 53.9734 15.7803 53.9756 15.7865 53.9774C15.7896 53.9783 15.7924 53.9792 15.795 53.9799C15.7963 53.9803 15.7975 53.9807 15.7986 53.981C15.7991 53.9811 15.7997 53.9813 15.8002 53.9815C15.8005 53.9815 15.8009 53.9816 15.801 53.9817C15.8014 53.9818 15.8018 53.9819 16.2184 52.5409C16.635 51.0999 16.6353 51.1 16.6357 51.1001C16.6358 51.1002 16.6362 51.1003 16.6364 51.1003C16.6369 51.1005 16.6373 51.1006 16.6377 51.1007C16.6386 51.101 16.6394 51.1012 16.6402 51.1014C16.6416 51.1019 16.6429 51.1022 16.6439 51.1025C16.6459 51.1031 16.647 51.1035 16.6471 51.1035C16.6475 51.1036 16.6443 51.1027 16.638 51.1006C16.6254 51.0964 16.6006 51.088 16.5667 51.0753C16.4976 51.0492 16.3978 51.0079 16.2876 50.951C16.041 50.8237 15.8666 50.6829 15.7859 50.5693L13.3394 52.3055ZM39.9805 64.6903C40.9557 64.2838 41.6943 63.7933 42.1976 63.3947C42.4496 63.1952 42.6442 63.0175 42.7818 62.8828C42.8506 62.8154 42.9053 62.7586 42.9461 62.7149C42.9664 62.6931 42.9833 62.6745 42.9967 62.6595C43.0034 62.652 43.0092 62.6454 43.0142 62.6397C43.0167 62.6369 43.0189 62.6343 43.021 62.6319C43.022 62.6307 43.023 62.6296 43.0239 62.6285C43.0243 62.628 43.0248 62.6275 43.0252 62.627C43.0254 62.6267 43.0257 62.6264 43.0258 62.6262C43.0262 62.6259 43.0265 62.6255 41.8875 61.6494C40.7486 60.6732 40.7489 60.6729 40.7492 60.6725C40.7493 60.6724 40.7496 60.6721 40.7498 60.6719C40.7502 60.6714 40.7505 60.671 40.7509 60.6706C40.7516 60.6698 40.7523 60.669 40.7529 60.6683C40.7541 60.6668 40.7552 60.6656 40.756 60.6646C40.7578 60.6627 40.7587 60.6616 40.759 60.6613C40.7594 60.6608 40.7569 60.6637 40.7514 60.6696C40.7403 60.6814 40.7175 60.7055 40.6828 60.7394C40.6133 60.8075 40.4974 60.9144 40.3354 61.0427C40.0107 61.2998 39.5072 61.6374 38.8263 61.9212L39.9805 64.6903ZM42.9482 62.71L58.1287 47.5296L56.0073 45.4082L40.8269 60.5887L42.9482 62.71ZM15.5475 53.8826L35.6965 63.9571L37.0382 61.2739L16.8892 51.1993L15.5475 53.8826ZM36.3674 62.6155C35.6963 63.957 35.6967 63.9572 35.697 63.9574C35.6971 63.9574 35.6974 63.9576 35.6977 63.9577C35.6981 63.9579 35.6986 63.9582 35.6991 63.9584C35.7001 63.9589 35.7012 63.9595 35.7024 63.9601C35.7048 63.9612 35.7075 63.9626 35.7106 63.9641C35.7167 63.9671 35.7243 63.9708 35.7331 63.975C35.7508 63.9836 35.774 63.9945 35.8022 64.0075C35.8587 64.0336 35.936 64.068 36.0318 64.1079C36.2228 64.1875 36.4905 64.2903 36.8168 64.3923C37.4608 64.5936 38.3767 64.8058 39.4034 64.8058V61.8058C38.7741 61.8058 38.1719 61.6728 37.7119 61.529C37.4862 61.4584 37.3054 61.3886 37.186 61.3388C37.1265 61.314 37.083 61.2945 37.0575 61.2828C37.0448 61.2769 37.0367 61.2731 37.0334 61.2715C37.0317 61.2707 37.0313 61.2705 37.0321 61.2709C37.0325 61.2711 37.0333 61.2714 37.0343 61.2719C37.0348 61.2722 37.0354 61.2725 37.0361 61.2728C37.0364 61.273 37.0368 61.2732 37.0372 61.2734C37.0374 61.2735 37.0377 61.2736 37.0378 61.2736C37.0381 61.2738 37.0384 61.274 36.3674 62.6155ZM39.9605 39.0297C40.8268 38.6832 41.5706 38.1807 42.0777 37.7906C42.3367 37.5913 42.5469 37.4112 42.6949 37.2784C42.7692 37.2118 42.8285 37.1565 42.8712 37.116C42.8925 37.0957 42.9097 37.079 42.9227 37.0664C42.9291 37.0601 42.9345 37.0548 42.9388 37.0505C42.941 37.0484 42.9428 37.0465 42.9444 37.045C42.9452 37.0442 42.9459 37.0434 42.9466 37.0428C42.9469 37.0425 42.9472 37.0422 42.9475 37.0419C42.9477 37.0417 42.9479 37.0415 42.948 37.0414C42.9482 37.0412 42.9484 37.041 41.8875 35.9805C40.8267 34.9201 40.8269 34.9199 40.8271 34.9197C40.8271 34.9196 40.8273 34.9194 40.8274 34.9193C40.8276 34.9191 40.8279 34.9189 40.8281 34.9187C40.8284 34.9183 40.8288 34.918 40.829 34.9177C40.8295 34.9172 40.8298 34.917 40.8298 34.9169C40.8299 34.9169 40.8289 34.9179 40.8269 34.9198C40.823 34.9236 40.8152 34.9312 40.8036 34.9422C40.7805 34.9642 40.7428 34.9995 40.692 35.045C40.5899 35.1366 40.4378 35.2671 40.2483 35.4129C39.8584 35.713 39.3601 36.0387 38.8464 36.2443L39.9605 39.0297ZM42.9482 37.0412L50.2623 29.727L48.141 27.6057L40.8269 34.9199L42.9482 37.0412ZM13.8918 27.3862C21.0496 30.9651 30.8163 35.8483 35.6966 38.2884L37.0382 35.6051C32.1579 33.165 22.3912 28.2818 15.2335 24.703L13.8918 27.3862ZM36.3674 36.9467C35.6964 38.2883 35.6967 38.2884 35.697 38.2886C35.6971 38.2887 35.6975 38.2888 35.6977 38.2889C35.6982 38.2892 35.6986 38.2894 35.6991 38.2897C35.7002 38.2902 35.7013 38.2907 35.7024 38.2913C35.7048 38.2925 35.7076 38.2938 35.7106 38.2953C35.7168 38.2984 35.7243 38.302 35.7331 38.3063C35.7509 38.3148 35.774 38.3258 35.8023 38.3388C35.8588 38.3648 35.936 38.3992 36.0318 38.4391C36.2228 38.5187 36.4906 38.6215 36.8168 38.7235C37.4609 38.9249 38.3767 39.137 39.4034 39.137V36.137C38.7741 36.137 38.1719 36.004 37.7119 35.8602C37.4862 35.7896 37.3054 35.7198 37.1859 35.67C37.1265 35.6452 37.083 35.6257 37.0575 35.614C37.0448 35.6081 37.0367 35.6043 37.0334 35.6027C37.0317 35.6019 37.0313 35.6017 37.0321 35.6021C37.0325 35.6023 37.0332 35.6026 37.0343 35.6031C37.0348 35.6034 37.0354 35.6037 37.0361 35.604C37.0364 35.6042 37.0368 35.6044 37.0371 35.6046C37.0373 35.6047 37.0376 35.6048 37.0377 35.6049C37.038 35.605 37.0383 35.6052 36.3674 36.9467Z"
          fill="white"
          className={`fill${active ? " active-fill" : ""}`}
        />
      </g>
    </svg>
  );
};

const Settings = (props) => {
  const { active } = props;
  return (
    <svg
      width="85"
      height="85"
      viewBox="0 0 85 85"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter3_d)">
        <path
          d="M49.8204 18.7652L48.9761 16.4854C48.0889 14.09 45.8044 12.5 43.25 12.5C40.6956 12.5 38.4111 14.09 37.5239 16.4854L36.6796 18.7652C35.1286 22.9529 30.8012 25.4288 26.4051 24.6438L24.1403 24.2393C21.6577 23.796 19.1645 24.962 17.9133 27.1517C16.7489 29.1895 16.8878 31.7207 18.2683 33.6189L19.7186 35.6131C22.2595 39.1068 22.2066 43.8538 19.5885 47.2901L18.5692 48.6279C16.9849 50.7073 16.66 53.4851 17.7218 55.874C19.0597 58.8843 22.2792 60.593 25.5221 60.0139L26.7313 59.798C30.9269 59.0488 35.0499 61.4398 36.4834 65.4535L37.5706 68.4976C38.4278 70.8978 40.7013 72.5 43.25 72.5C45.7987 72.5 48.0722 70.8978 48.9294 68.4976L50.0166 65.4535C51.4501 61.4398 55.5731 59.0488 59.7687 59.798L60.9779 60.0139C64.2208 60.593 67.4403 58.8843 68.7782 55.874C69.84 53.4851 69.5151 50.7073 67.9308 48.6279L66.9115 47.2901C64.2934 43.8538 64.2405 39.1068 66.7814 35.6131L68.2317 33.6189C69.6122 31.7207 69.7511 29.1895 68.5867 27.1517C67.3355 24.962 64.8423 23.796 62.3597 24.2393L60.0949 24.6438C55.6988 25.4288 51.3714 22.9529 49.8204 18.7652Z"
          stroke="white"
          strokeWidth="3"
          className={`stroke${active ? " active-stroke" : ""}`}
        />
        <path
          d="M52 42.5C52 47.1944 48.1944 51 43.5 51C38.8056 51 35 47.1944 35 42.5C35 37.8056 38.8056 34 43.5 34C48.1944 34 52 37.8056 52 42.5ZM37.125 42.5C37.125 46.0208 39.9792 48.875 43.5 48.875C47.0208 48.875 49.875 46.0208 49.875 42.5C49.875 38.9792 47.0208 36.125 43.5 36.125C39.9792 36.125 37.125 38.9792 37.125 42.5Z"
          fill="white"
          className={`fill${active ? " active-fill" : ""}`}
        />
      </g>
      <defs>
        <filter
          id="filter3_d"
          x="-8"
          y="-8"
          width="101"
          height="101"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="4" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.192157 0 0 0 0 0.819608 0 0 0 0 0.87451 0 0 0 0.85 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  );
};

const lightEffect = {
  filter: "url(#filter3_d)",
};

// create a component named Icon
let Icon = (props) => {
  const { type, active } = props;
  const history = useHistory();
  //href={`${window.location.origin}/${type}`}

  return (
    <div
      onClick={() => {
        if (type.includes("printers")) {
          history.push(`/rau/printers`);
        } else if (type.includes("parts")) {
          history.push(`/rau/parts`);
        } else {
          history.push(`/${type}`);
        }
      }}
      className="menu-item"
      id={type}
    >
      <div className="menu-icon">
        {type === "home" ? (
          <Home active={active} />
        ) : type === "printers" ? (
          <Printers active={active} />
        ) : type === "stock" ? (
          <Stock active={active} />
        ) : type === "settings" ? (
          <Settings active={active} />
        ) : (
          <Parts active={active} />
        )}
      </div>
      <div className="menu-img" style={{ opacity: active ? 1 : 0 }}>
        <div className="top"></div>
        <div className="bottom"></div>
      </div>
    </div>
  );
};

//make this component available to the app
export default Icon;
